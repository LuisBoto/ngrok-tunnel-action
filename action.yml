name: 'Ngrok Tunnel Action'
description: 'Tunnel traffic from within a Github Action runner'

branding:
  icon: 'compass'
  color: 'red'

inputs:
  timeout:  
    description: 'Ngrok tunnel deployment timeout'
    default: '1h'
  tunnel_type:
    description: 'Type of Ngrok tunnel, tcp or http'
    required: true
    default: 'tcp'
  port:
    description: 'The port to forward traffic to'
    required: true
  save_url_to_filename:
    description: 'Save the deployed tunnel URL to a file with the provided name'
  ngrok_authtoken:
    description: 'Ngrok authorization token'
    required: true
    
outputs:
  tunnel-url:
    description: "Deployed Ngrok tunnel URL"
    value: ${{ steps.print-tunnel-url.outputs.tunnel-url }}
    
runs:
  using: "composite"
  steps: 
    - run: wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
      shell: bash
    - run: unzip -qq ngrok-stable-linux-amd64.zip
      shell: bash
    - run: ./ngrok authtoken ${{ inputs.ngrok_authtoken }}
      shell: bash
    - run: ( timeout ${{ inputs.timeout }} ./ngrok ${{ inputs.tunnel_type }} ${{ inputs.port }} ) &
      shell: bash
      
    - id: print-tunnel-url
      run: echo "::set-output name=tunnel-url::$( curl http://127.0.0.1:4040/api/tunnels | jq -r ".tunnels[0].public_url" )"
      shell: bash
      
    - if: "${{ inputs.tunnel_type == 'tcp' }}"
      run: echo "::set-output name=tunnel-url::$( echo ${{ steps.print-tunnel-url.outputs.tunnel-url }} | tail -c 21 )"
      shell: bash
    - if: "${{ inputs.save_url_to_filename != '' }}"
      run: ${{ steps.print-tunnel-url.outputs.tunnel-url }} > ${{ inputs.save_url_to_filename }}
      shell: bash
